version: "3.9"
services:
  backend:
    build:
      context: .
    ports:
      - 3000:3000
    env_file: ./backend/.development.env
    volumes:
      - ./backend/dist:/app/dist
      - ./backend/src:/app/src
      - ./backend/src/migrations:/app/src/migrations
    depends_on:
      - postgres
      - testMySQL-e2e-testing
      - testPg-e2e-testing
      - mssql-e2e-testing
      - test-oracle-e2e-testing
      - test-ibm-db2-e2e-testing
      - test-mongo-e2e-testing
      - test-dynamodb-e2e-testing
      - test-elasticsearch-e2e-testing
      - cassandra-init
      - test-cassandra-e2e-testing
    links:
      - postgres
      - testMySQL-e2e-testing
      - testPg-e2e-testing
      - mssql-e2e-testing
      - test-oracle-e2e-testing
      - test-ibm-db2-e2e-testing
      - test-mongo-e2e-testing
      - test-dynamodb-e2e-testing
      - test-elasticsearch-e2e-testing
      - test-cassandra-e2e-testing
    command: ["yarn", "start"]

  testMySQL-e2e-testing:
    image: mysql:8.0.23
    ports:
      - 3308:3306
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: testDB

  testPg-e2e-testing:
    image: postgres
    ports:
      - 9002:5432
    environment:
      POSTGRES_PASSWORD: 123
    command: postgres -c 'max_connections=300'

  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: abc123
    command: postgres -c 'max_connections=300'

  mssql-e2e-testing:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - SA_PASSWORD=yNuXf@6T#BgoQ%U6knMp
      - ACCEPT_EULA=Y
    ports:
      - "5434:1433"

  test-oracle-e2e-testing:
    image: gvenzl/oracle-xe
    ports:
      - 1521:1521
    environment:
      ORACLE_PASSWORD: 12345

  autoadmin-ws-server:
    build:
      context: autoadmin-ws-server
    ports:
      - 8008:8008
    env_file: ./autoadmin-ws-server/.ws-server-development.env
    volumes:
      - ./autoadmin-ws-server/dist:/app/dist
      - ./autoadmin-ws-server/src:/app/src
    links:
      - backend
    depends_on:
      - backend

  rocketadmin-private-microservice:
    build:
      context: ../rocketadmin-saas
      dockerfile: ../rocketadmin-saas/Dockerfile
    ports:
      - 3001:3001
    env_file: ../rocketadmin-saas/.env
    links:
      - backend
      - rocketadmin-private-microservice-test-database
    depends_on:
      - rocketadmin-private-microservice-test-database
    command: ["yarn", "start"]

  rocketadmin-private-microservice-test-database:
    image: postgres
    ports:
      - 8001:5432
    environment:
      POSTGRES_PASSWORD: abc987
    command: postgres -c 'max_connections=300'

  test-ibm-db2-e2e-testing:
    image: icr.io/db2_community/db2
    restart: always
    privileged: true
    environment:
      - LICENSE=accept
      - DB2INSTANCE=db2inst1
      - DB2INST1_PASSWORD=password
      - DBNAME=testdb
      - BLU=false
      - ENABLE_ORACLE_COMPATIBILITY=false
      - UPDATEAVAIL=NO
      - TO_CREATE_SAMPLEDB=true
      - REPODB=false
      - IS_OSXFS=false
      - PERSISTENT_HOME=true
      - HADR_ENABLED=false
      - ETCD_ENDPOINT=
      - ETCD_USERNAME=
      - ETCD_PASSWORD=
    ports:
      - 50000:50000

  test-mongo-e2e-testing:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017

  test-dynamodb-e2e-testing:
    image: amazon/dynamodb-local
    ports:
      - 8000:8000
    environment:
      - AWS_ACCESS_KEY_ID=SuperSecretAwsAccessKey
      - AWS_SECRET=SuperSecretAwsSecret

  test-elasticsearch-e2e-testing:
    image: elasticsearch:8.17.5
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=SuperSecretElasticPassword
      - xpack.security.enabled=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 3

  test-cassandra-e2e-testing:
    image: cassandra:5.0.4
    ports:
      - 9042:9042
    environment:
      - CASSANDRA_CLUSTER_NAME=TestCluster
      - CASSANDRA_DC=TestDC
      - CASSANDRA_RACK=TestRack
    restart: always
    healthcheck:
      test:
        [
          "CMD",
          "cqlsh",
          "-u",
          "cassandra",
          "-p",
          "cassandra",
          "-e",
          "describe keyspaces",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  cassandra-init:
    image: cassandra:5.0.4
    depends_on:
      test-cassandra-e2e-testing:
        condition: service_healthy
    volumes:
      - ./init-cassandra.sh:/init-cassandra.sh
    command: ["/init-cassandra.sh"]
    restart: "no"

  rocketadmin-agent_mongo:
    build:
      context: .
      dockerfile: ./rocketadmin-agent/Dockerfile
    ports:
      - 8229:8229
    volumes:
      - ./rocketadmin-agent/dist:/app/dist
      - ./rocketadmin-agent/src:/app/src
    links:
      - autoadmin-ws-server
    depends_on:
      - autoadmin-ws-server
    environment:
      - REMOTE_WEBSOCKET_ADDRESS=ws://autoadmin-ws-server:8009
      - APPLICATION_CONFIG_FILE_NAME=.mongodb_test_agent_config.txt
    command: ["yarn", "start:dev"]

  rocketadmin-agent_ibmdb2:
    build:
      context: .
      dockerfile: ./rocketadmin-agent/Dockerfile
    ports:
      - 8308:8308
    volumes:
      - ./rocketadmin-agent/dist:/app/dist
      - ./rocketadmin-agent/src:/app/src
      - ./rocketadmin-agent/wait-for-db2.sh:/app/wait-for-db2.sh
      - ./rocketadmin-agent/wait-for-db2.js:/app/wait-for-db2.js
    links:
      - autoadmin-ws-server
    depends_on:
      - autoadmin-ws-server
    environment:
      - REMOTE_WEBSOCKET_ADDRESS=ws://autoadmin-ws-server:8009
      - APPLICATION_CONFIG_FILE_NAME=.ibmdb2_test_agent_config.txt
    command: ["node", "/app/wait-for-db2.js"]

  rocketadmin-agent_oracle:
    build:
      context: .
      dockerfile: ./rocketadmin-agent/Dockerfile
    ports:
      - 8088:8088
    volumes:
      - ./rocketadmin-agent/dist:/app/dist
      - ./rocketadmin-agent/src:/app/src
    links:
      - autoadmin-ws-server
    depends_on:
      - autoadmin-ws-server
    environment:
      - REMOTE_WEBSOCKET_ADDRESS=ws://autoadmin-ws-server:8009
      - APPLICATION_CONFIG_FILE_NAME=.oracle_test_agent_config.txt
    command: ["yarn", "start:dev"]

  rocketadmin-agent_postgres:
    build:
      context: .
      dockerfile: ./rocketadmin-agent/Dockerfile
    ports:
      - 8098:8098
    volumes:
      - ./rocketadmin-agent/dist:/app/dist
      - ./rocketadmin-agent/src:/app/src
    links:
      - autoadmin-ws-server
    depends_on:
      - autoadmin-ws-server
    environment:
      - REMOTE_WEBSOCKET_ADDRESS=ws://autoadmin-ws-server:8009
      - APPLICATION_CONFIG_FILE_NAME=.postgres_test_agent_config.txt
    command: ["yarn", "start:dev"]

  rocketadmin-agent_mysql:
    build:
      context: .
      dockerfile: ./rocketadmin-agent/Dockerfile
    ports:
      - 8108:8108
    volumes:
      - ./rocketadmin-agent/dist:/app/dist
      - ./rocketadmin-agent/src:/app/src
    links:
      - autoadmin-ws-server
    depends_on:
      - autoadmin-ws-server
    environment:
      - REMOTE_WEBSOCKET_ADDRESS=ws://autoadmin-ws-server:8009
      - APPLICATION_CONFIG_FILE_NAME=.mysql_test_agent_config.txt
    command: ["yarn", "start:dev"]

  rocketadmin-agent_mssql:
    build:
      context: .
      dockerfile: ./rocketadmin-agent/Dockerfile
    ports:
      - 8118:8118
    volumes:
      - ./rocketadmin-agent/dist:/app/dist
      - ./rocketadmin-agent/src:/app/src
    links:
      - autoadmin-ws-server
    depends_on:
      - autoadmin-ws-server
    environment:
      - REMOTE_WEBSOCKET_ADDRESS=ws://autoadmin-ws-server:8009
      - APPLICATION_CONFIG_FILE_NAME=.mssql_test_agent_config.txt
    command: ["yarn", "start:dev"]

  rocketadmin-agent_cassandra:
    build:
      context: .
      dockerfile: ./rocketadmin-agent/Dockerfile
    ports:
      - 8128:8128
    volumes:
      - ./rocketadmin-agent/dist:/app/dist
      - ./rocketadmin-agent/src:/app/src
    links:
      - autoadmin-ws-server
      - test-cassandra-e2e-testing
    depends_on:
      test-cassandra-e2e-testing:
        condition: service_healthy
      cassandra-init:
        condition: service_completed_successfully
      autoadmin-ws-server:
        condition: service_started
    environment:
      - REMOTE_WEBSOCKET_ADDRESS=ws://autoadmin-ws-server:8009
      - APPLICATION_CONFIG_FILE_NAME=.cassandra_test_agent_config.txt
    command: ["yarn", "start:dev"]
